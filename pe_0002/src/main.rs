use std::time;

fn main() {
    // #2 Even Fibonacci Numbers - Project Euler
    // https://projecteuler.net/problem=2
    // https://projecteuler.net/overview=0002
    // Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    // By starting with 1 and 2, the first 10 terms will be:
    // 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    // By considering the terms in the Fibonacci sequence whose values do not exceed four million,
    // find the sum of the even-valued terms.
    let now = time::Instant::now();
    println!("pe_0002 ans: {} - {:?}", pe_0002(4_000_000), now.elapsed());
}

fn pe_0002(n: u32) -> u32 {
    let mut sum = 0;
    let mut i = 1;
    let mut tmp;
    loop {
        tmp = fibonacci(i);
        if tmp >= n {
            break;
        };

        if tmp % 2 == 0 {
            sum += tmp
        };
        i += 1;
    }
    sum
}

fn fibonacci(n: u32) -> u32 {
    if n == 0 {
        0
    } else if n == 1 {
        1
    } else {
        fibonacci(n - 2) + fibonacci(n - 1)
    }
}
